package com.cos.book.service;

import java.util.List;


import org.springframework.stereotype.Service;
import org.springframework.transaction.annotation.Transactional;

import com.cos.book.domain.Book;
import com.cos.book.domain.BookRepository;

import lombok.RequiredArgsConstructor;

// 기능을 정의할 수 있고, 트랜잭션을 관리할 수 있음

@RequiredArgsConstructor
@Service
public class BookService {

	// 함수 => 송금() -> 레파지토리에 여러개의 함수 실행 -> commit or roolback
	private final BookRepository bookRepository;
	
	@Transactional
	public Book 저장하기(Book book) {
		return bookRepository.save(book);
	}
	
	public Book 한건가져오기(Long id) {
		return bookRepository.findById(id)
				.orElseThrow(()->new IllegalArgumentException("id를 확인해주세요."));
	}
	
	public List<Book> 모두가져오기(){
		return null;
	}
	
	public Book 수정하기(Long id, Book book) {
		return null;
	}
	
	public String 삭제하기(Long id) {
		return null;
	}
}
